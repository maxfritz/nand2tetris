// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/FullAdder.hdl

/**
 * Computes the sum of three bits.
 */

CHIP FullAdder {
    IN a, b, c;  // 1-bit inputs
    OUT sum,     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:
    // Put your code here:

	// first two bits
	HalfAdder(a=a,b=b,sum=sum1,carry=carry1);
	// add third bit to result; output sum and wait to output carry digit later
	HalfAdder(a=sum1,b=c,sum=sum,carry=carry2);

	// both carries above cannot result in a 1
	// since our max value would be three (i.e. sum = 1 carry = 1)
	// this catches the cases where carry1=carry2=0, or lets us know we have an overflow digit
	Xor(a=carry1,b=carry2,out=carry);
}